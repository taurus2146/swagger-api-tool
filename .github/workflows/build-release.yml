name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Trigger when pushing tags like v1.0.0
  workflow_dispatch:  # Allow manual trigger

env:
  PYTHONIOENCODING: utf-8
  PYTHONLEGACYWINDOWSSTDIO: utf-8

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller pillow
          # 确保 PyQt5 正确安装
          pip install --force-reinstall PyQt5==5.15.9
          # 安装 PyInstaller hooks
          pip install pyinstaller-hooks-contrib
          # 验证 PyQt5 安装
          python -c "import PyQt5.QtCore; print('PyQt5.QtCore imported successfully')"
          python -c "import PyQt5.QtWidgets; print('PyQt5.QtWidgets imported successfully')"
          python -c "import PyQt5.QtGui; print('PyQt5.QtGui imported successfully')"
          python -c "import PyQt5.sip; print('PyQt5.sip imported successfully')" || echo "PyQt5.sip not available, using fallback"
        
    - name: Create icon
      run: |
        python create_icon.py
      env:
        PYTHONIOENCODING: utf-8
        
    - name: Build directory version
      run: |
        pyinstaller build_simple.spec --clean

    - name: Build single file version
      run: |
        pyinstaller build_onefile.spec --clean

    - name: Build lightweight version
      run: |
        pyinstaller build_lightweight.spec --clean

    - name: Organize build outputs
      run: |
        # 重命名目录版本以避免冲突
        if (Test-Path "dist/SwaggerAPITester") {
          Rename-Item "dist/SwaggerAPITester" "dist/SwaggerAPITester-Directory"
        }
        # 重命名轻量级版本
        if (Test-Path "dist/SwaggerAPITester-Lite.exe") {
          Copy-Item "dist/SwaggerAPITester-Lite.exe" "dist/SwaggerAPITester-Lightweight.exe"
        }

    - name: Verify builds
      run: |
        echo "Checking build outputs..."
        dir dist/
        echo "Directory version:"
        if (Test-Path "dist/SwaggerAPITester-Directory") {
          dir dist/SwaggerAPITester-Directory/
        }
        echo "Single file version:"
        if (Test-Path "dist/SwaggerAPITester.exe") {
          $size = (Get-Item "dist/SwaggerAPITester.exe").Length / 1MB
          Write-Host "SwaggerAPITester.exe size: $([math]::Round($size, 1)) MB"
        }
        echo "Lightweight version:"
        if (Test-Path "dist/SwaggerAPITester-Lightweight.exe") {
          $size = (Get-Item "dist/SwaggerAPITester-Lightweight.exe").Length / 1MB
          Write-Host "SwaggerAPITester-Lightweight.exe size: $([math]::Round($size, 1)) MB"
        }

    - name: Create release archives
      run: |
        cd dist
        # 创建目录版本压缩包
        if (Test-Path "SwaggerAPITester-Directory") {
          7z a -tzip SwaggerAPITester-windows-directory.zip SwaggerAPITester-Directory/
        }
        # 创建单文件版本压缩包
        if (Test-Path "SwaggerAPITester.exe") {
          7z a -tzip SwaggerAPITester-windows-portable.zip SwaggerAPITester.exe
        }
        # 创建轻量级版本压缩包
        if (Test-Path "SwaggerAPITester-Lightweight.exe") {
          7z a -tzip SwaggerAPITester-windows-lightweight.zip SwaggerAPITester-Lightweight.exe
        }
        
    - name: Upload directory version artifact
      uses: actions/upload-artifact@v4
      with:
        name: SwaggerAPITester-windows-directory
        path: dist/SwaggerAPITester-windows-directory.zip

    - name: Upload portable version artifact
      uses: actions/upload-artifact@v4
      with:
        name: SwaggerAPITester-windows-portable
        path: dist/SwaggerAPITester-windows-portable.zip

    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      with:
        files: |
          dist/SwaggerAPITester-windows-directory.zip
          dist/SwaggerAPITester-windows-portable.zip
        draft: false
        prerelease: false

  build-linux:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-pyqt5 python3-pyqt5.qtwebengine
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller pillow
        
    - name: Create icon
      run: |
        python create_icon.py
        
    - name: Build executable
      run: |
        pyinstaller build.spec --clean
        
    - name: Create release archive
      run: |
        cd dist
        tar -czf SwaggerAPITester-linux.tar.gz SwaggerAPITester/
        
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: SwaggerAPITester-linux
        path: dist/SwaggerAPITester-linux.tar.gz
        
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      with:
        files: dist/SwaggerAPITester-linux.tar.gz
        draft: false
        prerelease: false