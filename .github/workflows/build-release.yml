name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Trigger when pushing tags like v1.0.0
  workflow_dispatch:  # Allow manual trigger

env:
  PYTHONIOENCODING: utf-8
  PYTHONLEGACYWINDOWSSTDIO: utf-8

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller pillow
          # 确保 PyQt5 正确安装
          pip install --force-reinstall PyQt5==5.15.9
          # 安装 PyInstaller hooks
          pip install pyinstaller-hooks-contrib
          # 验证 PyQt5 安装
          python -c "import PyQt5.QtCore; print('PyQt5.QtCore imported successfully')"
          python -c "import PyQt5.QtWidgets; print('PyQt5.QtWidgets imported successfully')"
          python -c "import PyQt5.QtGui; print('PyQt5.QtGui imported successfully')"
          python -c "import PyQt5.sip; print('PyQt5.sip imported successfully')" || echo "PyQt5.sip not available, using fallback"
        
    - name: Create icon
      run: |
        python create_icon.py
      env:
        PYTHONIOENCODING: utf-8
        
    - name: Build executable
      run: |
        pyinstaller build_simple.spec --clean

    - name: Verify build
      run: |
        echo "Running automated build verification..."
        python scripts/verify_pyqt5_build.py
        echo "Checking build output structure..."
        dir dist/SwaggerAPITester/
        echo "Checking for PyQt5 files..."
        dir dist/SwaggerAPITester/_internal/ | findstr /i "pyqt" || echo "No PyQt files found"

    - name: Create release archive
      run: |
        cd dist
        7z a -tzip SwaggerAPITester-windows.zip SwaggerAPITester/
        
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: SwaggerAPITester-windows
        path: dist/SwaggerAPITester-windows.zip
        
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      with:
        files: dist/SwaggerAPITester-windows.zip
        draft: false
        prerelease: false

  build-linux:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-pyqt5 python3-pyqt5.qtwebengine
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller pillow
        
    - name: Create icon
      run: |
        python create_icon.py
        
    - name: Build executable
      run: |
        pyinstaller build.spec --clean
        
    - name: Create release archive
      run: |
        cd dist
        tar -czf SwaggerAPITester-linux.tar.gz SwaggerAPITester/
        
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: SwaggerAPITester-linux
        path: dist/SwaggerAPITester-linux.tar.gz
        
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      with:
        files: dist/SwaggerAPITester-linux.tar.gz
        draft: false
        prerelease: false